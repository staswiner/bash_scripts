#!/bin/bash

#set -x
source ./logger

_add_option()
{
	local option=$1
	COMPREPLY+=($(compgen -S\= -W "$option" -- $currentCompletionWord))
}

_add_multi_option()
{
	local option=$1; shift;
	local answers="$@"; 
	local current="${COMP_WORDS[COMP_CWORD]}";
	local previous="${COMP_WORDS[COMP_CWORD-1]}";
	if [[ $previous = $option ]]; then
		COMPREPLY=($(compgen -W "$answers" -- $current))
		return 1;
	fi
	COMPREPLY+=($(compgen -W "$option" -- $current))
	return 0;
}

_compose_options()
{
	COMPREPLY=();
	local current="${COMP_WORDS[COMP_CWORD]}";
	
	projects="kafka kafka-test"
	master_ips="zose-master01 zose-master02"
	_add_multi_option "--project" $projects 
	[[ $? = 1 ]] && return 0
	
	_add_multi_option "--master-ip" $master_ips
	[[ $? = 1 ]] && return 0
	
	_add_multi_option "--help"
	_add_multi_option "-h"
}

_read_options()
{
	cat ./fileCompletion |
}

_generate_file()
{
	cat << EOF > completion1
#!/bin/bash
`declare -f _add_option`

`declare -f _add_multi_option`

_compose_options()
{
	COMPREPLY=();
	local current="\${COMP_WORDS[COMP_CWORD]}";

}

complete -F _compose_options ./script.sh
EOF

}

_script()
{
	COMPREPLY=();
	projects="kafka kafka-test"
	local currentCompletionWord="${COMP_WORDS[COMP_CWORD]}";
	local previousCompletionWord="${COMP_WORDS[COMP_CWORD-1]}"
	if [[ $previousCompletionWord = "=" ]]
	then
		previousCompletionWord=${COMP_WORDS[COMP_CWORD-2]}	
	fi
	case "$currentCompletionWord" in
		*)
			COMPREPLY=($(compgen -S\= -W "--project --master-ip" -- $currentCompletionWord))
			COMPREPLY+=($(compgen -W "-h --help" -- "$currentCompletionWord"))

			case $previousCompletionWord in
			--project)
				COMPREPLY=($(compgen -W "$projects" -- "${currentCompletionWord#=}"))
				;;
			--master-ip)
				COMPREPLY=($(compgen -W "zose-master01 zose-master02 zose-master03" -- "${currentCompletionWord#=}"))
				;;
			esac

			;;
	esac

	return 0
}

_read_options
